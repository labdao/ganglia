name: Canary Run Equibind Tool

on:
  workflow_dispatch:
  push:
    branches:
      - 'ops/**'
  # schedule:
  #  - cron: '*/10 * * * *'

jobs:
  canary:
    runs-on: ubuntu-20.04
    environment: test
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      # Checkout the repository. Note we do not use anything other than the test data and tools directory
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the latest release
        run: |
          # echo $(gh release --repo labdao/plex list | grep Latest | cut -f1)
          # use the GitHub CLI to download the latest release
          gh release download --repo labdao/plex --pattern "*linux_amd64.tar.gz"
          # extract the package
          tar -xf *.tar.gz

      - name: Run Equibind
        run: |
          ./plex -tool equibind -input-dir testdata/binding/abl 2>&1 | tee plex_out.log
          plex_result_code=${PIPESTATUS[0]}
          if [ $plex_result_code -gt 0 ] then
            # exit immediately if plex exited with an error
            exit $plex_result_code
          fi
          result_dir=$(cat plex_out.log | grep 'Finished processing, results written to' | sed -n 's/^.*Finished processing, results written to //p' | sed 's/\/io.json//')
          cd "$result_dir/entry-0/outputs"
          if [ "$(find . -name '*docked.sdf' | grep 'docked.sdf')" == "" ]; then
            echo "No docked files found"
            exit 1
          else
            echo "Docked files found"
          fi
        env:
          # PLEX_ACCESS_TOKEN: ${{ secrets.PLEX_ACCESS_TOKEN }}
          PLEX_ACCESS_TOKEN: mellon 

      - name: Check in with Heii On-Call
        run: |
          curl -X POST -H 'Authorization: Bearer heii_l5iNt7vLIXmiULchN9O5jI034zMwUKS5m5OnCczXCPwRiVGb_7ede0fe1' https://api.heiioncall.com./triggers/${HEII_ON_CALL_INBOUND_TRIGGER_ID}/checkin
        env:
          HEII_ON_CALL_INBOUND_TRIGGER_ID: e720588c-35cd-4392-9d02-bec350aa34e9
