name: Equibind Canary

on:
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'

jobs:
  canary:
    # runs-on: ubuntu-latest
    runs-on:
      - self-hosted
      - "prod"
    environment: ci
    env:
      GH_TOKEN: ${{ github.token }}
      BACALHAU_API_HOST: "requester.prod.labdao.xyz"
      IPFS_API_HOST: "ipfs.prod.labdao.xyz"
      BACALHAU_VERSION: "1.1.2"
      HEII_ON_CALL_INBOUND_TRIGGER_ID: 90126187-9e79-4486-a273-49ade88ba079
    steps:
      # Checkout the repository. Note we do not use anything other than the test data and tools directory
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download the latest plex release
        run: |
          # use the GitHub CLI to download the latest release
          gh release download --repo labdao/plex --pattern "*linux_amd64.tar.gz"
          tar -zxvf plex*.tar.gz

      - name: Download Bacalhau release
        run: |
          # use the GitHub CLI to download the latest release
          gh release download "v${BACALHAU_VERSION}" --repo bacalhau-project/bacalhau --pattern "*linux_amd64.tar.gz"
          tar -zxvf bacalhau*.tar.gz

      - name: Run Equibind
        run: |
          set -x

          # Dump BACALHAU_API_HOST
          echo "BACALHAU_API_HOST set to ${BACALHAU_API_HOST}"

          # Create bacalhau config file
          ./bacalhau version

          # Get node list
          ./bacalhau node list

          # Run the job
          ./plex init -t tools/equibind-ci.json -i '{"protein": ["testdata/binding/abl/7n9g.pdb"], "small_molecule": ["testdata/binding/abl/ZINC000003986735.sdf"]}' --scatteringMethod=dotProduct --autoRun=true -a test -a canary | tee -a plex_run_output.log

          result_dir=$(cat plex_run_output.log | grep 'Finished processing, results written to' | sed -n 's/^.*Finished processing, results written to //p' | sed 's/\/io.json//')

          # Get equibind job id
          echo EQUIBIND_JOB_ID=$(cat plex_run_output.log | grep -oP "^Bacalhau job id.*"  | cut -d ":" -f2 | awk '{print $1}') >> $GITHUB_ENV

          # chdir for outputs
          cd "$result_dir/entry-0/outputs"

          if [ "$(find . -name '*docked.sdf' | grep 'docked.sdf')" == "" ]; then
            echo "No docked files found"
            exit 1
          else
            echo "Docked files found:"
            find . -name '*docked.sdf' | grep 'docked.sdf'
          fi

      - name: Check in with Heii On-Call
        run: |
          curl -X POST -H 'Authorization: Bearer ${{ secrets.HEII_ON_CALL_API_KEY }}' https://api.heiioncall.com./triggers/${HEII_ON_CALL_INBOUND_TRIGGER_ID}/checkin

      - name: Run bacalhau describe
        # run always even when
        if: always()
        run: |
          ./bacalhau describe ${{ env.EQUIBIND_JOB_ID }}

      - name: upload outputs
        # run always even when
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: canary-equibind
          path: |
            plex_run_output.log
            job-*
            jobs/
