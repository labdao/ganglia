const json = {
  class: "CommandLineTool",
  name: "diffusion",
  description:
    "RFdiffusion is a method for structure generation, with or without conditional information (a motif, target etc). It can perform a whole range of protein design challenges.",
  author: "sokrypton",
  github: "https://github.com/sokrypton/ColabDesign",
  paper: "https://www.nature.com/articles/s41586-023-06415-8",
  task: "protein design",
  baseCommand: ["/bin/bash", "-c"],
  arguments: [
    "python -u main.py \\",
    "inputs=container \\",
    "outputs=container \\",
    "params.basic_settings.pdb_chain=$(inputs.target_chain.value) \\",
    "params.advanced_settings.pdb_start_residue=$(inputs.target_start_residue.value) \\",
    "params.advanced_settings.pdb_end_residue=$(inputs.target_end_residue.value) \\",
    "params.advanced_settings.hotspot=$(inputs.hotspot.value) \\",
    "params.basic_settings.binder_length=$(inputs.binder_length.value) \\",
    "params.basic_settings.num_designs=$(inputs.number_of_binders.value) \\",
    "params.expert_settings.RFDiffusion_Binder.contigs_override=$(inputs.full_prompt.value);",
  ],
  dockerPull: "quay.io/labdao/colabdesign@sha256:06c331562c5be4ebc6849f86df72348bfcb3365cd80d386f4222cd848c0abe92",
  gpuBool: true,
  networkBool: true,
  cpu: 3,
  memoryGB: 12,
  inputs: {
    target_protein: {
      type: "File",
      description: "The target protein to design against.",
      array: false,
      glob: ["*.pdb"],
      default: "",
      min: "",
      max: "",
      example: "my_target_protein.pdb",
      grouping: "target",
      position: "101",
      required: true,
    },
    target_chain: {
      type: "string",
      description: "The chain of the target protein to design against.",
      array: false,
      glob: [""],
      default: "A",
      min: "",
      max: "",
      example: "A",
      grouping: "target",
      position: "102",
      required: true,
    },
    target_start_residue: {
      type: "int",
      description: "The start residue of the target protein.",
      array: false,
      glob: [""],
      default: "1",
      min: "1",
      max: "",
      example: "1",
      grouping: "target",
      position: "103",
      required: true,
    },
    target_end_residue: {
      type: "int",
      description: "The end residue of the target protein.",
      array: false,
      glob: [""],
      default: "1",
      min: "1",
      max: "",
      example: "300",
      grouping: "target",
      position: "104",
      required: true,
    },
    hotspot: {
      type: "string",
      description: "The residues that should be in contact with the binder.",
      array: false,
      glob: [""],
      default: "",
      min: "",
      max: "",
      example: "A30,A33,A34",
      grouping: "target",
      position: "105",
      required: true,
    },
    binder_length: {
      type: "int",
      description: "The length of the protein binder that is being designed",
      array: false,
      glob: [""],
      default: "50",
      min: "1",
      max: "1000",
      example: "50",
      grouping: "binder",
      position: "201",
      required: true,
    },
    number_of_binders: {
      type: "int",
      description: "The number of protein binders to be designed",
      array: false,
      glob: [""],
      default: "2",
      min: "1",
      max: "32",
      example: "2",
      grouping: "binder",
      position: "202",
      required: true,
    },
    full_prompt: {
      type: "string",
      description: "The complete prompt or 'contig' passed to the diffusion model. This overrides some other GUI inputs.",
      array: false,
      glob: [""],
      default: "",
      min: "",
      max: "",
      example: "A1-283:B1-6/1/B8-20/22/B43-47",
      grouping: "_advanced",
      position: "301",
      required: false,
    },
  },
  outputs: {
    scores: {
      type: "File",
      item: "",
      glob: ["*_scores.csv"],
    },
    best_design: {
      type: "File",
      item: "",
      glob: ["*_best.pdb"],
    },
    all_outputs: {
      type: "Array",
      item: "File",
      glob: ["*.zip"],
    },
  },
};

export default json;
