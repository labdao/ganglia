- name: Provision Receptor
  remote_user: ubuntu
  hosts: tag_Type_receptor
  vars:
    plex_dir: /opt/local/plex
    receptor_dir: /opt/local/receptor
  tasks:
    - name: Install aptitude
      become: yes
      ansible.builtin.apt:
        name: aptitude
        state: present
        update_cache: true

    - name: Create required  directories, writable by user
      become: yes
      ansible.builtin.file:
        path: "{{ item }}"
        owner: ubuntu
        group: ubuntu 
        state: directory
      loop:
        - "{{ plex_dir }}"
        - /opt/local/receptor

    - name: Download root certs for db connection
      ansible.builtin.get_url:
        url: https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
        dest: "{{ receptor_dir }}/global-bundle.pem"

    - name: Place the config file
      ansible.builtin.template:
        src: files/receptor-config
        dest: "{{ receptor_dir }}/configs"

    - name: Ensure sercrets file exists
      ansible.builtin.file:
        path: "{{ receptor_dir }}/secrets"
        state: touch

    - name: Pull the plex repository
      ansible.builtin.git:
        repo: https://github.com/labdao/plex.git
        dest: "{{ plex_dir }}/"

    - name: Install system packages
      become: yes
      ansible.builtin.apt:
        pkg:
          - postgresql-client
          - golang-go

    - name: Place the receptor systemd unit
      become: yes
      ansible.builtin.template:
        src: files/receptor.service
        dest: /etc/systemd/system
      notify:
        - Systemd Daemon Reload

    - name: Restart receptor
      become: yes
      ansible.builtin.service:
        name: receptor
        state: restarted

    - name: Add to bashrc file
      ansible.builtin.blockinfile:
        create: true
        path: /home/ubuntu/.bashrc
        block: |
          set -o allexport
          source {{ receptor_dir }}/configs
          source {{ receptor_dir }}/secrets
          set +o allexport

  handlers:
    - name: Systemd Daemon Reload
      become: yes
      ansible.builtin.systemd:
        daemon_reload: true
