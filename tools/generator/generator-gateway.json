{
  "name": "sequence-only binder design v1.4 w.checkpt (beta)",
  "description": "This model generates protein binders based on a user prompt. The prompt consists of a binder template sequence and the sequence of the target. The sequences are separated by a semicolon and unknown binder residues can be represented by an X.\nBinders are generated by combining a conditional protein structure diffusion model (RFDiffusion) with an inverse folding model (ProteinMPNN). Proposed binder sequences are further optimised using a masked protein language model (ESM2). After generation, candidates are evaluated using a protein folding models (AF multimer via Colabfold or Omegafold) and a physics-based prediction of protein binding affinity (Prodigy).\nThe model's output is a set of candidate binders that are summarised in a .csv table together with matching protein structures for each candidate as .pdb files.",
  "author": "Convexity Labs",
  "github": "https://github.com/labdao/plex/tree/main/tools/generator",
  "paper": "",
  "taskCategory": "protein-binder-design",
  "task": "sequence design",
  "baseCommand": [
  ],
  "arguments": [
  ],
  "dockerPull": "quay.io/labdao/generator@sha256:ad0eb874c46e5c815398a08fd5080305f88de711162193b1d78c9d4c756b6ee3",
  "gpuBool": true,
  "memoryGB": 12,
  "cpu": 3,
  "networkBool": true,
  "inputs": {
    "binder_protein_sequence": {
      "type": "string",
      "description": "Sequence specifying a binder protein template. The sequence has to be written using the one-letter amino acid alphabet and may contain an arbitrary number of X characters to indicate unkown residues. Characters followed by * and an integer n, will be repeated reapeated n-times in the sequence, e.g. V*5 -> VVVVV.",
      "array": false,
      "glob": [
        ""
      ],
      "default": "MKKAVINGEQIRSISDLHQTLKKELALPEYYGENLDALWDALTGWxxxxLVLEWRQFEQSKQLTENGAESVLQVFREAKAEGADITIILS",
      "min": "",
      "max": "",
      "example": "MKKAVINGEQIRSISDLHQTLKKELALPEYYGENLDALWDALTGWxxxxLVLEWRQFEQSKQLTENGAESVLQVFREAKAEGADITIILS",
      "grouping": "Sequence prompt",
      "position": "101",
      "required": true
    },
    "target_protein_sequence": {
      "type": "string",
      "description": "Sequence fully specifying the target protein.",
      "array": false,
      "glob": [
        ""
      ],
      "default": "MGSSHHHHHHSQAPIEGRAQVINTFDGVADYLQTYHKLPDNYITKSEAQALGWVASKGNLCDVAPGKSIGGDIFSNREGKLPGKSGRTWREADINYTCGFRNSDRILYSSDWLIYKTTDHYQTFTKIR",
      "min": "",
      "max": "",
      "example": "MGSSHHHHHHSQAPIEGRAQVINTFDGVADYLQTYHKLPDNYITKSEAQALGWVASKGNLCDVAPGKSIGGDIFSNREGKLPGKSGRTWREADINYTCGFRNSDRILYSSDWLIYKTTDHYQTFTKIR",
      "grouping": "Sequence prompt",
      "position": "102",
      "required": true
    },
    "number_of_binders": {
      "type": "number",
      "description": "Number of binders generated",
      "array": false,
      "glob": [
        ""
      ],
      "default": "3",
      "min": "1",
      "max": "8",
      "example": "4",
      "grouping": "_Advanced inputs",
      "position": "201",
      "required": true
    },
    "init_permissibility_vec": {
      "type": "string",
      "description": "Contig prompt to specific fixed and masked section of the binder sequence, B3:10 fixes residues 3 to 10, and x11:15 masks residues 11 to 15, ...",
      "array": false,
      "glob": [
        ""
      ],
      "default": "",
      "min": "",
      "max": "",
      "example": "B3:10/x11:15/B21:22",
      "grouping": "_Advanced inputs",
      "position": "202",
      "required": false
    },
    "hotspots": {
      "type": "string",
      "description": "Hotspot residues on the target sequence indicating binding sites.",
      "array": false,
      "glob": [
        ""
      ],
      "default": "",
      "min": "",
      "max": "",
      "example": "A30, A35, A36",
      "grouping": "_Advanced inputs",
      "position": "203",
      "required": false
    },
    "high_fidelity": {
      "type": "bool",
      "description": "Indicate whether you want to make a high fidelity computation which is more compute intensive, or a low fidelity computation running faster.",
      "array": false,
      "glob": [
        ""
      ],
      "default": false,
      "min": "",
      "max": "",
      "grouping": "_Advanced inputs",
      "position": "204",
      "required": false
    }
  },
  "outputs": {
    "Summary_of_all_designs_including_sequences_and_scores.": {
      "type": "File",
      "description": "Summary of all designs including sequences and scores.",
      "item": "",
      "glob": [
        "summary.csv"
      ]
    },
    "Protein_complex_structure.": {
      "type": "File",
      "description": "Protein complex structure.",
      "item": "",
      "glob": [
        "*.pdb"
      ]
    },
    "Sequence_prediction_from_inverse_folding.": {
      "type": "File",
      "description": "Sequence prediction from inverse-folding.",
      "item": "",
      "glob": [
        "*.fa"
      ]
    },   
    "Protein_design_process_trajectory.": {
      "type": "File",
      "description": "Protein design process trajectory.",
      "item": "",
      "glob": [
        "*.trb"
      ]
    }
  }
}
